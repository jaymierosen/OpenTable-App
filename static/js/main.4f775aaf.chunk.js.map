{"version":3,"sources":["Components/StyledComponents.js","Components/Header.js","Components/TextField.js","Components/Button.js","Components/Form.js","Functions/helper-functions.js","Components/RestaurantListItem.js","Components/RestaurantList.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","section","_templateObject","Title","h1","_templateObject2","SubTitle","h2","_templateObject3","Paragraph","p","_templateObject4","Link","a","_templateObject5","List","ul","_templateObject6","ListItem","li","_templateObject7","Input","input","_templateObject8","props","inputColor","SubmitButton","attrs","type","size","small","undefined","_templateObject9","primary","Label","label","_templateObject10","MainFooter","footer","_templateObject11","Header","react_default","createElement","TextField","id","placeholder","value","onChange","handleChange","Button","Form","onSubmit","handleSubmit","htmlFor","Components_TextField","Components_Button","library","add","faDollarSign","RestaurantListItem","Fragment","restaurants","map","restaurant","i","key","concat","name","address","num","price","Array","from","length","_","role","aria-label","react_fontawesome_index_es","style","color","icon","RestaurantList","Components_RestaurantListItem","Footer","href","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","city","bind","assertThisInitialized","event","setState","target","e","_this2","getRestaurants","then","res","json","data","catch","err","console","log","preventDefault","fetch","Components_Header","Components_Form","className","display","borderBottom","str","text","toLowerCase","split","s","charAt","toUpperCase","substring","join","capFrstLttr","Components_RestaurantList","Components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f775aaf.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  padding: 3em;\n  position: relative;\n`;\n\nexport const Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\nexport const SubTitle = styled.h2`\n  font-size: 1.2em;\n  color: palevioletred;\n  font-weight: 600;\n    @media (max-width: 420px) {\n      margin: 2em 0;\n      display: block;\n    }\n`;\n\nexport const Paragraph = styled.p`\n  font-size: 1em;\n  color: dimgray;\n`;\n\nexport const Link = styled.a`\n  font-size: 1em;\n  color: white;\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n  padding-left: 0;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 1em;\n  color: dimgray;\n`;\n\nexport const Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  color: ${props => props.inputColor || \"palevioletred\"};\n  background: papayawhip;\n  border: none;\n  font-size: 16px;\n  border-radius: 3px;\n    ::placeholder {\n      color: palevioletred;\n    }\n    @media (max-width: 420px) {\n      margin: 1em 0;\n      display: block;\n    }\n`;\n\nexport const SubmitButton = styled.input.attrs({\n  type: 'submit',\n  size: props => (props.small ? 5 : undefined),\n})`\nbackground: ${props => props.primary ? \"palevioletred\" : \"white\"};\ncolor: ${props => props.primary ? \"white\" : \"palevioletred\"};\nfont-size: 1em;\npadding: 0.25em 1em;\nborder: 2px solid palevioletred;\nborder-radius: 3px;\n`\n\nexport const Label = styled.label`\n  font-size: 1em;\n  color: palevioletred;\n  font-weight: 600;\n`;\n\nexport const MainFooter = styled.footer`\n  position: fixed;\n  width: 100%;\n  background: palevioletred;\n  bottom: 0;\n  left: 0;\n    p {\n      color: white;\n      margin: 0.5em;\n    }\n`;","import React from 'react';\nimport { Title } from './StyledComponents';\n\nconst Header = (() => {\n  return (\n    <header><Title>OpenTable App</Title></header>\n  )\n})\n\nexport default Header;","import React from 'react';\nimport { Input } from './StyledComponents';\n\nconst TextField = props => {\n  return (\n    <Input id=\"text-field\" type=\"text\" placeholder=\"e.g. Toronto\" value={props.value} onChange={props.handleChange} />\n  )\n}\n\nexport default TextField;","import React from 'react';\nimport { SubmitButton } from './StyledComponents';\n\nconst Button = (() => {\n  return (\n    <SubmitButton type=\"submit\" value=\"Submit\" />\n  )\n});\n\nexport default Button;","import React from 'react';\nimport { Label } from './StyledComponents';\nimport TextField from './TextField';\nimport Button from './Button';\n\nconst Form = props => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Label htmlFor=\"text-field\">Enter a city:</Label>\n      <TextField value={props.value} handleChange={props.handleChange} />\n      <Button />\n    </form>\n  )\n}\n\nexport default Form;","import React from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDollarSign} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faDollarSign);\n\nexport function capFrstLttr(str) {\n  var text = str;\n  text = text.toLowerCase()\n    .split(' ')\n    .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n    .join(' ');\n  return text;\n}\n\nexport function numToDollarSign(num) {\n  return (\n    <span>\n      { Array.from({ length: num }, (_, i) =>\n        <span role=\"img\" aria-label=\"dollar sign icon\" key={`${i}`}> <FontAwesomeIcon style={{ color: 'palevioletred' }} icon=\"dollar-sign\" /></span>) }\n    </span>\n  ) \n}","import React from 'react';\nimport { List, ListItem } from './StyledComponents';\nimport { numToDollarSign } from '../Functions/helper-functions';\n\nconst RestaurantListItem = props => {\n  return (\n    <React.Fragment>\n      {props.restaurants.map((restaurant, i) => {\n        return (\n          <List key={`${i}`}>\n            <ListItem key={`restaurant-name-${i}`}><strong>Name:</strong> {restaurant.name}</ListItem>\n            <ListItem key={`restaurant-address-${i}`}><strong>Address:</strong> {restaurant.address}</ListItem>\n            <ListItem key={`restaurant-price-${i}`}><strong>Price:</strong>\n              {numToDollarSign(restaurant.price)}\n            </ListItem>\n          </List>\n        )\n      })}\n    </React.Fragment>\n  )\n}\n\nexport default RestaurantListItem;","import React from 'react';\nimport RestaurantListItem from './RestaurantListItem';\n\nconst RestaurantList = props => {\n  return (\n    <RestaurantListItem restaurants={props.restaurants} />\n  )\n}\n\nexport default RestaurantList;","import React from 'react';\nimport { Paragraph, MainFooter, Link } from './StyledComponents';\n\nconst Footer = (() => {\n  return (\n    <MainFooter><Paragraph>Designed &amp; developed by <Link href=\"http://jaymierosen.com\">Jaymie Rosen</Link></Paragraph></MainFooter>\n  )\n})\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Wrapper, SubTitle } from './Components/StyledComponents';\nimport Header from './Components/Header';\nimport Form from './Components/Form';\nimport RestaurantList from './Components/RestaurantList';\nimport Footer from './Components/Footer';\nimport { capFrstLttr } from './Functions/helper-functions';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restaurants: [],\n      city: '',\n      placeholder: 'inline-block'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // should I be using componentDidMount?\n  // I am still a little confused about how lifecycle methods work, but would love to learn more about it and fully understand how they work\n\n  // componentDidMount() {\n  //   this.getRestaurants(this.state.city)\n  //     .then(res => res.json())\n  //     .then(data =>\n  //       this.setState({\n  //         restaurants: data\n  //       })\n  //     );\n  // }\n\n  handleChange(event) {\n    this.setState({\n      city: event.target.value,\n      placeholder: 'none'\n    });\n  }\n\n  handleSubmit(e) {\n    this.getRestaurants(this.state.city)\n      .then(res => res.json())\n      .then(data =>\n        this.setState({\n          restaurants: data.restaurants\n        })\n      )\n      // not sure why errors are not being logged in the console... :/\n      .catch(err => console.log(\"There was an error:\" + err));\n    e.preventDefault();\n  }\n\n  getRestaurants(city) {\n    // would have loved to incorporate pagination for the results given more time\n    return fetch(`https://opentable.herokuapp.com/api/restaurants?city=${city}&per_page=100`);\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header />\n        <Form handleSubmit={this.handleSubmit} value={this.state.city} handleChange={this.handleChange} />\n        <SubTitle>Restaurants in <span className=\"placeholder\" style={{ color: 'lightgrey', display: this.state.placeholder }}>City</span><span style={{ borderBottom: '2px solid grey' }}>{capFrstLttr(this.state.city)}</span></SubTitle>\n        <RestaurantList restaurants={this.state.restaurants} />\n        <Footer />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}